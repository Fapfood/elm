var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['<.>'] = F2(
	function (v1, v2) {
		return (v1.x * v2.x) + (v1.y * v2.y);
	});
var _user$project$Vector$dot = F2(
	function (x, y) {
		return A2(_user$project$Vector_ops['<.>'], x, y);
	});
var _user$project$Vector$magnitude = function (v) {
	return _elm_lang$core$Basics$sqrt(
		Math.pow(v.x, 2) + Math.pow(v.y, 2));
};
var _user$project$Vector$Vector = F2(
	function (a, b) {
		return {x: a, y: b};
	});
var _user$project$Vector$origin = A2(_user$project$Vector$Vector, 0, 0);
var _user$project$Vector$neg = function (v) {
	return A2(_user$project$Vector$Vector, 0 - v.x, 0 - v.y);
};
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['<+>'] = F2(
	function (v1, v2) {
		return A2(_user$project$Vector$Vector, v1.x + v2.x, v1.y + v2.y);
	});
var _user$project$Vector$add = F2(
	function (x, y) {
		return A2(_user$project$Vector_ops['<+>'], x, y);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['<->'] = F2(
	function (v1, v2) {
		return A2(
			_user$project$Vector_ops['<+>'],
			v1,
			_user$project$Vector$neg(v2));
	});
var _user$project$Vector$sub = F2(
	function (x, y) {
		return A2(_user$project$Vector_ops['<->'], x, y);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['<*>'] = F2(
	function (v1, v2) {
		return A2(_user$project$Vector$Vector, v1.x * v2.x, v1.y * v2.y);
	});
var _user$project$Vector$cross = F2(
	function (x, y) {
		return A2(_user$project$Vector_ops['<*>'], x, y);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['*>'] = F2(
	function (c, v) {
		return A2(_user$project$Vector$Vector, v.x * c, v.y * c);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['<*'] = F2(
	function (v, c) {
		return A2(_user$project$Vector_ops['*>'], c, v);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['/>'] = F2(
	function (c, v) {
		return A2(_user$project$Vector$Vector, v.x / c, v.y / c);
	});
var _user$project$Vector_ops = _user$project$Vector_ops || {};
_user$project$Vector_ops['</'] = F2(
	function (v, c) {
		return A2(_user$project$Vector_ops['/>'], c, v);
	});
var _user$project$Vector$unit = function (v) {
	return A2(
		_user$project$Vector_ops['</'],
		v,
		_user$project$Vector$magnitude(v));
};
